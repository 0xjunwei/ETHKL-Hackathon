{
  "address": "0xea3f67804f4D26a7651596583a4454B80A9F9928",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_notarizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "NotarizerStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_documentURL",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_ipfsLinkOfProof",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ProofAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_notarizer",
          "type": "address"
        }
      ],
      "name": "addNotarizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_documentURL",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ipfsLinkOfProof",
          "type": "string"
        }
      ],
      "name": "addProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_notary",
          "type": "address"
        }
      ],
      "name": "checkNotarizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "notarizers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "proofs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ipfs_link",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_notarizer",
          "type": "address"
        }
      ],
      "name": "removeNotarizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_documentURL",
          "type": "string"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8db04437f94b39fec73c082b16aac957d76ba77650f0557bad606db81475f757",
  "receipt": {
    "to": null,
    "from": "0x55d4A9140C86c026a9e0C19b756b58daE304953f",
    "contractAddress": "0xea3f67804f4D26a7651596583a4454B80A9F9928",
    "transactionIndex": 16,
    "gasUsed": "987084",
    "logsBloom": "0x
    "blockHash": "0x9d5df14a7feeef52c0ebbdb4cea5a77d700fe75c46aa7211a62e04fe62da1ac7",
    "transactionHash": "0x8db04437f94b39fec73c082b16aac957d76ba77650f0557bad606db81475f757",
    "logs": [],
    "blockNumber": 655510,
    "cumulativeGasUsed": "3372315",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "1351cfd7a56df5592af0004c172d48e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_notarizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"NotarizerStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_documentURL\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_ipfsLinkOfProof\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProofAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notarizer\",\"type\":\"address\"}],\"name\":\"addNotarizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_documentURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfsLinkOfProof\",\"type\":\"string\"}],\"name\":\"addProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notary\",\"type\":\"address\"}],\"name\":\"checkNotarizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"notarizers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfs_link\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notarizer\",\"type\":\"address\"}],\"name\":\"removeNotarizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_documentURL\",\"type\":\"string\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Notary.sol\":\"Notary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Notary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\ncontract Notary {\\n    struct Proof {\\n        // Timestamp proof was added to the blockchain\\n        uint256 timestamp;\\n        // IPFS of Proof Committing into the smart contract\\n        string ipfs_link;\\n    }\\n\\n    address public immutable i_owner;\\n    mapping(address => bool) public notarizers;\\n    mapping(string => Proof) public proofs; // document identifier to Proof\\n\\n    // Saving gas so only showing status change true/false\\n    event NotarizerStatusChanged(address indexed _notarizer, bool status);\\n    // Emit event when a new proof is added\\n    event ProofAdded(\\n        string indexed _documentURL,\\n        string _ipfsLinkOfProof,\\n        uint256 timestamp\\n    );\\n\\n    constructor() {\\n        i_owner = msg.sender;\\n    }\\n\\n    // Typical onlyOwner function to ensure only owner can call\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Not contract owner\\\");\\n        _;\\n    }\\n    // Only notarizers can add proofs to the contract, having an array can have multiple people within an organization to add instead of a single wallet\\n    modifier onlyNotarizer() {\\n        require(notarizers[msg.sender], \\\"Not authorized notarizer\\\");\\n        _;\\n    }\\n\\n    // Allows the owner to add a notarizer\\n    function addNotarizer(address _notarizer) public onlyOwner {\\n        notarizers[_notarizer] = true;\\n        emit NotarizerStatusChanged(_notarizer, true);\\n    }\\n\\n    // removes notarizer function\\n    function removeNotarizer(address _notarizer) public onlyOwner {\\n        notarizers[_notarizer] = false;\\n        emit NotarizerStatusChanged(_notarizer, false);\\n    }\\n\\n    // adds proof as a notarizer\\n    // @param _documentURL URL of the domain\\n    // @param _ipfsLinkOfProof IPFS Link to the proof.json file\\n    function addProof(\\n        string memory _documentURL,\\n        string memory _ipfsLinkOfProof\\n    ) public onlyNotarizer {\\n        require(proofs[_documentURL].timestamp == 0, \\\"Proof already exists!\\\");\\n        proofs[_documentURL] = Proof(block.timestamp, _ipfsLinkOfProof);\\n        emit ProofAdded(_documentURL, _ipfsLinkOfProof, block.timestamp);\\n    }\\n\\n    // Validates a proof if it exists\\n    // @param _documentURL URL of the domain\\n    // Function to retrieve the IPFS link by document URL\\n    function verifyProof(\\n        string memory _documentURL\\n    ) public view returns (string memory) {\\n        return proofs[_documentURL].ipfs_link;\\n    }\\n\\n    // Get owner of contract\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    // check if notarizer of contract\\n    function checkNotarizer(address _notary) public view returns (bool) {\\n        return notarizers[_notary];\\n    }\\n}\\n\",\"keccak256\":\"0x3a235d26f2bfd67161df23340d744f52553ccd856468117ba1ea2539295bac59\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516110f0610075600039600081816103d5015281816106a6015281816106cc015261080301526110f06000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063784486d911610066578063784486d9146101595780637bb0350c14610175578063893d20e814610191578063bbeb7620146101af578063dba6335f146101cb57610093565b80631bcdb52d146100985780632640df77146100c85780633b18f691146100f85780634fa09dc214610129575b600080fd5b6100b260048036038101906100ad9190610897565b6101e9565b6040516100bf91906108df565b60405180910390f35b6100e260048036038101906100dd9190610a40565b61023e565b6040516100ef9190610b08565b60405180910390f35b610112600480360381019061010d9190610a40565b6102f1565b604051610120929190610b43565b60405180910390f35b610143600480360381019061013e9190610897565b6103b3565b60405161015091906108df565b60405180910390f35b610173600480360381019061016e9190610897565b6103d3565b005b61018f600480360381019061018a9190610b73565b61050a565b005b6101996106a2565b6040516101a69190610bfa565b60405180910390f35b6101c960048036038101906101c49190610897565b6106ca565b005b6101d3610801565b6040516101e09190610bfa565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60606001826040516102509190610c51565b9081526020016040518091039020600101805461026c90610c97565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610c97565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b50505050509050919050565b60018180516020810182018051848252602083016020850120818352809550505050505060009150905080600001549080600101805461033090610c97565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610c97565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b5050505050905082565b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890610d14565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b24560006040516104ff91906108df565b60405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610d80565b60405180910390fd5b60006001836040516105a79190610c51565b908152602001604051809103902060000154146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090610dec565b60405180910390fd5b60405180604001604052804281526020018281525060018360405161061e9190610c51565b908152602001604051809103902060008201518160000155602082015181600101908161064b9190610fb8565b509050508160405161065d9190610c51565b60405180910390207f5453de44dc323fa793df928e8f253842de056016085c77b44e4f90a4a365ddfa824260405161069692919061108a565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074f90610d14565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b24560016040516107f691906108df565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086482610839565b9050919050565b61087481610859565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b6000602082840312156108ad576108ac61082f565b5b60006108bb84828501610882565b91505092915050565b60008115159050919050565b6108d9816108c4565b82525050565b60006020820190506108f460008301846108d0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61094d82610904565b810181811067ffffffffffffffff8211171561096c5761096b610915565b5b80604052505050565b600061097f610825565b905061098b8282610944565b919050565b600067ffffffffffffffff8211156109ab576109aa610915565b5b6109b482610904565b9050602081019050919050565b82818337600083830152505050565b60006109e36109de84610990565b610975565b9050828152602081018484840111156109ff576109fe6108ff565b5b610a0a8482856109c1565b509392505050565b600082601f830112610a2757610a266108fa565b5b8135610a378482602086016109d0565b91505092915050565b600060208284031215610a5657610a5561082f565b5b600082013567ffffffffffffffff811115610a7457610a73610834565b5b610a8084828501610a12565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac3578082015181840152602081019050610aa8565b60008484015250505050565b6000610ada82610a89565b610ae48185610a94565b9350610af4818560208601610aa5565b610afd81610904565b840191505092915050565b60006020820190508181036000830152610b228184610acf565b905092915050565b6000819050919050565b610b3d81610b2a565b82525050565b6000604082019050610b586000830185610b34565b8181036020830152610b6a8184610acf565b90509392505050565b60008060408385031215610b8a57610b8961082f565b5b600083013567ffffffffffffffff811115610ba857610ba7610834565b5b610bb485828601610a12565b925050602083013567ffffffffffffffff811115610bd557610bd4610834565b5b610be185828601610a12565b9150509250929050565b610bf481610859565b82525050565b6000602082019050610c0f6000830184610beb565b92915050565b600081905092915050565b6000610c2b82610a89565b610c358185610c15565b9350610c45818560208601610aa5565b80840191505092915050565b6000610c5d8284610c20565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610caf57607f821691505b602082108103610cc257610cc1610c68565b5b50919050565b7f4e6f7420636f6e7472616374206f776e65720000000000000000000000000000600082015250565b6000610cfe601283610a94565b9150610d0982610cc8565b602082019050919050565b60006020820190508181036000830152610d2d81610cf1565b9050919050565b7f4e6f7420617574686f72697a6564206e6f746172697a65720000000000000000600082015250565b6000610d6a601883610a94565b9150610d7582610d34565b602082019050919050565b60006020820190508181036000830152610d9981610d5d565b9050919050565b7f50726f6f6620616c726561647920657869737473210000000000000000000000600082015250565b6000610dd6601583610a94565b9150610de182610da0565b602082019050919050565b60006020820190508181036000830152610e0581610dc9565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e6e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e31565b610e788683610e31565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610eb5610eb0610eab84610b2a565b610e90565b610b2a565b9050919050565b6000819050919050565b610ecf83610e9a565b610ee3610edb82610ebc565b848454610e3e565b825550505050565b600090565b610ef8610eeb565b610f03818484610ec6565b505050565b5b81811015610f2757610f1c600082610ef0565b600181019050610f09565b5050565b601f821115610f6c57610f3d81610e0c565b610f4684610e21565b81016020851015610f55578190505b610f69610f6185610e21565b830182610f08565b50505b505050565b600082821c905092915050565b6000610f8f60001984600802610f71565b1980831691505092915050565b6000610fa88383610f7e565b9150826002028217905092915050565b610fc182610a89565b67ffffffffffffffff811115610fda57610fd9610915565b5b610fe48254610c97565b610fef828285610f2b565b600060209050601f8311600181146110225760008415611010578287015190505b61101a8582610f9c565b865550611082565b601f19841661103086610e0c565b60005b8281101561105857848901518255600182019150602085019450602081019050611033565b868310156110755784890151611071601f891682610f7e565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526110a48185610acf565b90506110b36020830184610b34565b939250505056fea26469706673582212202231c15570257c3710411b5e9d364d8d1156b04b056f064f26f6318d00ccd5f664736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063784486d911610066578063784486d9146101595780637bb0350c14610175578063893d20e814610191578063bbeb7620146101af578063dba6335f146101cb57610093565b80631bcdb52d146100985780632640df77146100c85780633b18f691146100f85780634fa09dc214610129575b600080fd5b6100b260048036038101906100ad9190610897565b6101e9565b6040516100bf91906108df565b60405180910390f35b6100e260048036038101906100dd9190610a40565b61023e565b6040516100ef9190610b08565b60405180910390f35b610112600480360381019061010d9190610a40565b6102f1565b604051610120929190610b43565b60405180910390f35b610143600480360381019061013e9190610897565b6103b3565b60405161015091906108df565b60405180910390f35b610173600480360381019061016e9190610897565b6103d3565b005b61018f600480360381019061018a9190610b73565b61050a565b005b6101996106a2565b6040516101a69190610bfa565b60405180910390f35b6101c960048036038101906101c49190610897565b6106ca565b005b6101d3610801565b6040516101e09190610bfa565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60606001826040516102509190610c51565b9081526020016040518091039020600101805461026c90610c97565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610c97565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b50505050509050919050565b60018180516020810182018051848252602083016020850120818352809550505050505060009150905080600001549080600101805461033090610c97565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610c97565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b5050505050905082565b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890610d14565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b24560006040516104ff91906108df565b60405180910390a250565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610d80565b60405180910390fd5b60006001836040516105a79190610c51565b908152602001604051809103902060000154146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090610dec565b60405180910390fd5b60405180604001604052804281526020018281525060018360405161061e9190610c51565b908152602001604051809103902060008201518160000155602082015181600101908161064b9190610fb8565b509050508160405161065d9190610c51565b60405180910390207f5453de44dc323fa793df928e8f253842de056016085c77b44e4f90a4a365ddfa824260405161069692919061108a565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074f90610d14565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b24560016040516107f691906108df565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086482610839565b9050919050565b61087481610859565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b6000602082840312156108ad576108ac61082f565b5b60006108bb84828501610882565b91505092915050565b60008115159050919050565b6108d9816108c4565b82525050565b60006020820190506108f460008301846108d0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61094d82610904565b810181811067ffffffffffffffff8211171561096c5761096b610915565b5b80604052505050565b600061097f610825565b905061098b8282610944565b919050565b600067ffffffffffffffff8211156109ab576109aa610915565b5b6109b482610904565b9050602081019050919050565b82818337600083830152505050565b60006109e36109de84610990565b610975565b9050828152602081018484840111156109ff576109fe6108ff565b5b610a0a8482856109c1565b509392505050565b600082601f830112610a2757610a266108fa565b5b8135610a378482602086016109d0565b91505092915050565b600060208284031215610a5657610a5561082f565b5b600082013567ffffffffffffffff811115610a7457610a73610834565b5b610a8084828501610a12565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac3578082015181840152602081019050610aa8565b60008484015250505050565b6000610ada82610a89565b610ae48185610a94565b9350610af4818560208601610aa5565b610afd81610904565b840191505092915050565b60006020820190508181036000830152610b228184610acf565b905092915050565b6000819050919050565b610b3d81610b2a565b82525050565b6000604082019050610b586000830185610b34565b8181036020830152610b6a8184610acf565b90509392505050565b60008060408385031215610b8a57610b8961082f565b5b600083013567ffffffffffffffff811115610ba857610ba7610834565b5b610bb485828601610a12565b925050602083013567ffffffffffffffff811115610bd557610bd4610834565b5b610be185828601610a12565b9150509250929050565b610bf481610859565b82525050565b6000602082019050610c0f6000830184610beb565b92915050565b600081905092915050565b6000610c2b82610a89565b610c358185610c15565b9350610c45818560208601610aa5565b80840191505092915050565b6000610c5d8284610c20565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610caf57607f821691505b602082108103610cc257610cc1610c68565b5b50919050565b7f4e6f7420636f6e7472616374206f776e65720000000000000000000000000000600082015250565b6000610cfe601283610a94565b9150610d0982610cc8565b602082019050919050565b60006020820190508181036000830152610d2d81610cf1565b9050919050565b7f4e6f7420617574686f72697a6564206e6f746172697a65720000000000000000600082015250565b6000610d6a601883610a94565b9150610d7582610d34565b602082019050919050565b60006020820190508181036000830152610d9981610d5d565b9050919050565b7f50726f6f6620616c726561647920657869737473210000000000000000000000600082015250565b6000610dd6601583610a94565b9150610de182610da0565b602082019050919050565b60006020820190508181036000830152610e0581610dc9565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e6e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e31565b610e788683610e31565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610eb5610eb0610eab84610b2a565b610e90565b610b2a565b9050919050565b6000819050919050565b610ecf83610e9a565b610ee3610edb82610ebc565b848454610e3e565b825550505050565b600090565b610ef8610eeb565b610f03818484610ec6565b505050565b5b81811015610f2757610f1c600082610ef0565b600181019050610f09565b5050565b601f821115610f6c57610f3d81610e0c565b610f4684610e21565b81016020851015610f55578190505b610f69610f6185610e21565b830182610f08565b50505b505050565b600082821c905092915050565b6000610f8f60001984600802610f71565b1980831691505092915050565b6000610fa88383610f7e565b9150826002028217905092915050565b610fc182610a89565b67ffffffffffffffff811115610fda57610fd9610915565b5b610fe48254610c97565b610fef828285610f2b565b600060209050601f8311600181146110225760008415611010578287015190505b61101a8582610f9c565b865550611082565b601f19841661103086610e0c565b60005b8281101561105857848901518255600182019150602085019450602081019050611033565b868310156110755784890151611071601f891682610f7e565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526110a48185610acf565b90506110b36020830184610b34565b939250505056fea26469706673582212202231c15570257c3710411b5e9d364d8d1156b04b056f064f26f6318d00ccd5f664736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/Notary.sol:Notary",
        "label": "notarizers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 17,
        "contract": "contracts/Notary.sol:Notary",
        "label": "proofs",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Proof)6_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Proof)6_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Notary.Proof)",
        "numberOfBytes": "32",
        "value": "t_struct(Proof)6_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proof)6_storage": {
        "encoding": "inplace",
        "label": "struct Notary.Proof",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Notary.sol:Notary",
            "label": "timestamp",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5,
            "contract": "contracts/Notary.sol:Notary",
            "label": "ipfs_link",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}