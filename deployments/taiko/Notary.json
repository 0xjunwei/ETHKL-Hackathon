{
  "address": "0x3BAa38251D60573C72a3051af15b34DDcFa5834f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_notarizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "NotarizerStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "_docHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_tslHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ProofAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_notarizer",
          "type": "address"
        }
      ],
      "name": "addNotarizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_docHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tslHash",
          "type": "string"
        }
      ],
      "name": "addProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_notary",
          "type": "address"
        }
      ],
      "name": "checkNotarizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "notarizers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "proofs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_notarizer",
          "type": "address"
        }
      ],
      "name": "removeNotarizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_docHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tslHash",
          "type": "string"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1ae34abae8ddccbdcb57475ce7affbdf688530bcc70116194364060bfaf8b97f",
  "receipt": {
    "to": null,
    "from": "0x55d4A9140C86c026a9e0C19b756b58daE304953f",
    "contractAddress": "0x3BAa38251D60573C72a3051af15b34DDcFa5834f",
    "transactionIndex": 7,
    "gasUsed": "1066114",
    "logsBloom": "0x
    "blockHash": "0xbc8f78bdda99b8ac3178f9f81d002a8e1531158d0d9670b6622f8bf7b43df325",
    "transactionHash": "0x1ae34abae8ddccbdcb57475ce7affbdf688530bcc70116194364060bfaf8b97f",
    "logs": [],
    "blockNumber": 653114,
    "cumulativeGasUsed": "2179774",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "326d40d84911d69b6c7750c770666c6f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_notarizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"NotarizerStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_docHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_tslHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProofAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notarizer\",\"type\":\"address\"}],\"name\":\"addNotarizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_docHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tslHash\",\"type\":\"string\"}],\"name\":\"addProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notary\",\"type\":\"address\"}],\"name\":\"checkNotarizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"notarizers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notarizer\",\"type\":\"address\"}],\"name\":\"removeNotarizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_docHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tslHash\",\"type\":\"string\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Notary.sol\":\"Notary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Notary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\ncontract Notary {\\n    struct Proof {\\n        // Timestamp proof was added to the blockchain\\n        uint256 timestamp;\\n        // Bytes of Proof Committing into the smart contract\\n        string hash;\\n    }\\n\\n    address public immutable i_owner;\\n    mapping(address => bool) public notarizers;\\n    mapping(string => Proof) public proofs; // document identifier to Proof\\n\\n    // Saving gas so only showing status change true/false\\n    event NotarizerStatusChanged(address indexed _notarizer, bool status);\\n    // Emit event when a new proof is added\\n    event ProofAdded(\\n        string indexed _docHash,\\n        string _tslHash,\\n        uint256 timestamp\\n    );\\n\\n    constructor() {\\n        i_owner = msg.sender;\\n    }\\n\\n    // Typical onlyOwner function to ensure only owner can call\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Not contract owner\\\");\\n        _;\\n    }\\n    // Only notarizers can add proofs to the contract, having an array can have multiple people within an organization to add instead of a single wallet\\n    modifier onlyNotarizer() {\\n        require(notarizers[msg.sender], \\\"Not authorized notarizer\\\");\\n        _;\\n    }\\n\\n    // Allows the owner to add a notarizer\\n    function addNotarizer(address _notarizer) public onlyOwner {\\n        notarizers[_notarizer] = true;\\n        emit NotarizerStatusChanged(_notarizer, true);\\n    }\\n\\n    // removes notarizer function\\n    function removeNotarizer(address _notarizer) public onlyOwner {\\n        notarizers[_notarizer] = false;\\n        emit NotarizerStatusChanged(_notarizer, false);\\n    }\\n\\n    // adds proof as a notarizer\\n    // @param _docHash hash of document\\n    // @param _tslHash the TLSnotary hash of document with timestamp this was placed\\n    function addProof(\\n        string memory _docHash,\\n        string memory _tslHash\\n    ) public onlyNotarizer {\\n        require(proofs[_docHash].timestamp == 0, \\\"Proof already exists!\\\");\\n        proofs[_docHash] = Proof(block.timestamp, _tslHash);\\n        emit ProofAdded(_docHash, _tslHash, block.timestamp);\\n    }\\n\\n    // Validates a proof if it exists\\n    // @param _docHash hash of the document\\n    // @param _tslHash the TLSnotary hash of document to check if it matches the stored proof\\n    function verifyProof(\\n        string calldata _docHash,\\n        string calldata _tslHash\\n    ) public view returns (bool) {\\n        bytes32 b_docHash = keccak256(abi.encodePacked(proofs[_docHash].hash));\\n        bytes32 b_tslHash = keccak256(abi.encodePacked(_tslHash));\\n        return b_docHash == b_tslHash;\\n    }\\n\\n    // Get owner of contract\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    // check if notarizer of contract\\n    function checkNotarizer(address _notary) public view returns (bool) {\\n        return notarizers[_notary];\\n    }\\n}\\n\",\"keccak256\":\"0xbaff06abb006931f0aa81e72dbce0208f177305a1b322f0a6c5d7b6326663d89\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161125e610075600039600081816103220152818161067d015281816106a301526107da015261125e6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806378939fad1161006657806378939fad146101455780637bb0350c14610175578063893d20e814610191578063bbeb7620146101af578063dba6335f146101cb57610093565b80631bcdb52d146100985780633b18f691146100c85780634fa09dc2146100f9578063784486d914610129575b600080fd5b6100b260048036038101906100ad919061086e565b6101e9565b6040516100bf91906108b6565b60405180910390f35b6100e260048036038101906100dd9190610a17565b61023e565b6040516100f0929190610af8565b60405180910390f35b610113600480360381019061010e919061086e565b610300565b60405161012091906108b6565b60405180910390f35b610143600480360381019061013e919061086e565b610320565b005b61015f600480360381019061015a9190610b88565b610457565b60405161016c91906108b6565b60405180910390f35b61018f600480360381019061018a9190610c09565b6104e1565b005b610199610679565b6040516101a69190610c90565b60405180910390f35b6101c960048036038101906101c4919061086e565b6106a1565b005b6101d36107d8565b6040516101e09190610c90565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60018180516020810182018051848252602083016020850120818352809550505050505060009150905080600001549080600101805461027d90610cda565b80601f01602080910402602001604051908101604052809291908181526020018280546102a990610cda565b80156102f65780601f106102cb576101008083540402835291602001916102f6565b820191906000526020600020905b8154815290600101906020018083116102d957829003601f168201915b5050505050905082565b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610d57565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b245600060405161044c91906108b6565b60405180910390a250565b6000806001868660405161046c929190610da7565b908152602001604051809103902060010160405160200161048d9190610e58565b604051602081830303815290604052805190602001209050600084846040516020016104ba929190610da7565b60405160208183030381529060405280519060200120905080821492505050949350505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610ebb565b60405180910390fd5b600060018360405161057e9190610f0c565b908152602001604051809103902060000154146105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610f6f565b60405180910390fd5b6040518060400160405280428152602001828152506001836040516105f59190610f0c565b90815260200160405180910390206000820151816000015560208201518160010190816106229190611126565b50905050816040516106349190610f0c565b60405180910390207f5453de44dc323fa793df928e8f253842de056016085c77b44e4f90a4a365ddfa824260405161066d9291906111f8565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072690610d57565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b24560016040516107cd91906108b6565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083b82610810565b9050919050565b61084b81610830565b811461085657600080fd5b50565b60008135905061086881610842565b92915050565b60006020828403121561088457610883610806565b5b600061089284828501610859565b91505092915050565b60008115159050919050565b6108b08161089b565b82525050565b60006020820190506108cb60008301846108a7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610924826108db565b810181811067ffffffffffffffff82111715610943576109426108ec565b5b80604052505050565b60006109566107fc565b9050610962828261091b565b919050565b600067ffffffffffffffff821115610982576109816108ec565b5b61098b826108db565b9050602081019050919050565b82818337600083830152505050565b60006109ba6109b584610967565b61094c565b9050828152602081018484840111156109d6576109d56108d6565b5b6109e1848285610998565b509392505050565b600082601f8301126109fe576109fd6108d1565b5b8135610a0e8482602086016109a7565b91505092915050565b600060208284031215610a2d57610a2c610806565b5b600082013567ffffffffffffffff811115610a4b57610a4a61080b565b5b610a57848285016109e9565b91505092915050565b6000819050919050565b610a7381610a60565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab3578082015181840152602081019050610a98565b60008484015250505050565b6000610aca82610a79565b610ad48185610a84565b9350610ae4818560208601610a95565b610aed816108db565b840191505092915050565b6000604082019050610b0d6000830185610a6a565b8181036020830152610b1f8184610abf565b90509392505050565b600080fd5b600080fd5b60008083601f840112610b4857610b476108d1565b5b8235905067ffffffffffffffff811115610b6557610b64610b28565b5b602083019150836001820283011115610b8157610b80610b2d565b5b9250929050565b60008060008060408587031215610ba257610ba1610806565b5b600085013567ffffffffffffffff811115610bc057610bbf61080b565b5b610bcc87828801610b32565b9450945050602085013567ffffffffffffffff811115610bef57610bee61080b565b5b610bfb87828801610b32565b925092505092959194509250565b60008060408385031215610c2057610c1f610806565b5b600083013567ffffffffffffffff811115610c3e57610c3d61080b565b5b610c4a858286016109e9565b925050602083013567ffffffffffffffff811115610c6b57610c6a61080b565b5b610c77858286016109e9565b9150509250929050565b610c8a81610830565b82525050565b6000602082019050610ca56000830184610c81565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cf257607f821691505b602082108103610d0557610d04610cab565b5b50919050565b7f4e6f7420636f6e7472616374206f776e65720000000000000000000000000000600082015250565b6000610d41601283610a84565b9150610d4c82610d0b565b602082019050919050565b60006020820190508181036000830152610d7081610d34565b9050919050565b600081905092915050565b6000610d8e8385610d77565b9350610d9b838584610998565b82840190509392505050565b6000610db4828486610d82565b91508190509392505050565b60008190508160005260206000209050919050565b60008154610de281610cda565b610dec8186610d77565b94506001821660008114610e075760018114610e1c57610e4f565b60ff1983168652811515820286019350610e4f565b610e2585610dc0565b60005b83811015610e4757815481890152600182019150602081019050610e28565b838801955050505b50505092915050565b6000610e648284610dd5565b915081905092915050565b7f4e6f7420617574686f72697a6564206e6f746172697a65720000000000000000600082015250565b6000610ea5601883610a84565b9150610eb082610e6f565b602082019050919050565b60006020820190508181036000830152610ed481610e98565b9050919050565b6000610ee682610a79565b610ef08185610d77565b9350610f00818560208601610a95565b80840191505092915050565b6000610f188284610edb565b915081905092915050565b7f50726f6f6620616c726561647920657869737473210000000000000000000000600082015250565b6000610f59601583610a84565b9150610f6482610f23565b602082019050919050565b60006020820190508181036000830152610f8881610f4c565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610fdc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f9f565b610fe68683610f9f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061102361101e61101984610a60565b610ffe565b610a60565b9050919050565b6000819050919050565b61103d83611008565b6110516110498261102a565b848454610fac565b825550505050565b600090565b611066611059565b611071818484611034565b505050565b5b818110156110955761108a60008261105e565b600181019050611077565b5050565b601f8211156110da576110ab81610dc0565b6110b484610f8f565b810160208510156110c3578190505b6110d76110cf85610f8f565b830182611076565b50505b505050565b600082821c905092915050565b60006110fd600019846008026110df565b1980831691505092915050565b600061111683836110ec565b9150826002028217905092915050565b61112f82610a79565b67ffffffffffffffff811115611148576111476108ec565b5b6111528254610cda565b61115d828285611099565b600060209050601f831160018114611190576000841561117e578287015190505b611188858261110a565b8655506111f0565b601f19841661119e86610dc0565b60005b828110156111c6578489015182556001820191506020850194506020810190506111a1565b868310156111e357848901516111df601f8916826110ec565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526112128185610abf565b90506112216020830184610a6a565b939250505056fea2646970667358221220569493f08daa775b3d39d48dd28a48d293f7fd235f27d704327c148ac9f4ffe264736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806378939fad1161006657806378939fad146101455780637bb0350c14610175578063893d20e814610191578063bbeb7620146101af578063dba6335f146101cb57610093565b80631bcdb52d146100985780633b18f691146100c85780634fa09dc2146100f9578063784486d914610129575b600080fd5b6100b260048036038101906100ad919061086e565b6101e9565b6040516100bf91906108b6565b60405180910390f35b6100e260048036038101906100dd9190610a17565b61023e565b6040516100f0929190610af8565b60405180910390f35b610113600480360381019061010e919061086e565b610300565b60405161012091906108b6565b60405180910390f35b610143600480360381019061013e919061086e565b610320565b005b61015f600480360381019061015a9190610b88565b610457565b60405161016c91906108b6565b60405180910390f35b61018f600480360381019061018a9190610c09565b6104e1565b005b610199610679565b6040516101a69190610c90565b60405180910390f35b6101c960048036038101906101c4919061086e565b6106a1565b005b6101d36107d8565b6040516101e09190610c90565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60018180516020810182018051848252602083016020850120818352809550505050505060009150905080600001549080600101805461027d90610cda565b80601f01602080910402602001604051908101604052809291908181526020018280546102a990610cda565b80156102f65780601f106102cb576101008083540402835291602001916102f6565b820191906000526020600020905b8154815290600101906020018083116102d957829003601f168201915b5050505050905082565b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610d57565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b245600060405161044c91906108b6565b60405180910390a250565b6000806001868660405161046c929190610da7565b908152602001604051809103902060010160405160200161048d9190610e58565b604051602081830303815290604052805190602001209050600084846040516020016104ba929190610da7565b60405160208183030381529060405280519060200120905080821492505050949350505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610ebb565b60405180910390fd5b600060018360405161057e9190610f0c565b908152602001604051809103902060000154146105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610f6f565b60405180910390fd5b6040518060400160405280428152602001828152506001836040516105f59190610f0c565b90815260200160405180910390206000820151816000015560208201518160010190816106229190611126565b50905050816040516106349190610f0c565b60405180910390207f5453de44dc323fa793df928e8f253842de056016085c77b44e4f90a4a365ddfa824260405161066d9291906111f8565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072690610d57565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1b562d905d8c1e9e424069cc9ce22e10ce0bfa240f6a5be1c2044834691b24560016040516107cd91906108b6565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083b82610810565b9050919050565b61084b81610830565b811461085657600080fd5b50565b60008135905061086881610842565b92915050565b60006020828403121561088457610883610806565b5b600061089284828501610859565b91505092915050565b60008115159050919050565b6108b08161089b565b82525050565b60006020820190506108cb60008301846108a7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610924826108db565b810181811067ffffffffffffffff82111715610943576109426108ec565b5b80604052505050565b60006109566107fc565b9050610962828261091b565b919050565b600067ffffffffffffffff821115610982576109816108ec565b5b61098b826108db565b9050602081019050919050565b82818337600083830152505050565b60006109ba6109b584610967565b61094c565b9050828152602081018484840111156109d6576109d56108d6565b5b6109e1848285610998565b509392505050565b600082601f8301126109fe576109fd6108d1565b5b8135610a0e8482602086016109a7565b91505092915050565b600060208284031215610a2d57610a2c610806565b5b600082013567ffffffffffffffff811115610a4b57610a4a61080b565b5b610a57848285016109e9565b91505092915050565b6000819050919050565b610a7381610a60565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab3578082015181840152602081019050610a98565b60008484015250505050565b6000610aca82610a79565b610ad48185610a84565b9350610ae4818560208601610a95565b610aed816108db565b840191505092915050565b6000604082019050610b0d6000830185610a6a565b8181036020830152610b1f8184610abf565b90509392505050565b600080fd5b600080fd5b60008083601f840112610b4857610b476108d1565b5b8235905067ffffffffffffffff811115610b6557610b64610b28565b5b602083019150836001820283011115610b8157610b80610b2d565b5b9250929050565b60008060008060408587031215610ba257610ba1610806565b5b600085013567ffffffffffffffff811115610bc057610bbf61080b565b5b610bcc87828801610b32565b9450945050602085013567ffffffffffffffff811115610bef57610bee61080b565b5b610bfb87828801610b32565b925092505092959194509250565b60008060408385031215610c2057610c1f610806565b5b600083013567ffffffffffffffff811115610c3e57610c3d61080b565b5b610c4a858286016109e9565b925050602083013567ffffffffffffffff811115610c6b57610c6a61080b565b5b610c77858286016109e9565b9150509250929050565b610c8a81610830565b82525050565b6000602082019050610ca56000830184610c81565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cf257607f821691505b602082108103610d0557610d04610cab565b5b50919050565b7f4e6f7420636f6e7472616374206f776e65720000000000000000000000000000600082015250565b6000610d41601283610a84565b9150610d4c82610d0b565b602082019050919050565b60006020820190508181036000830152610d7081610d34565b9050919050565b600081905092915050565b6000610d8e8385610d77565b9350610d9b838584610998565b82840190509392505050565b6000610db4828486610d82565b91508190509392505050565b60008190508160005260206000209050919050565b60008154610de281610cda565b610dec8186610d77565b94506001821660008114610e075760018114610e1c57610e4f565b60ff1983168652811515820286019350610e4f565b610e2585610dc0565b60005b83811015610e4757815481890152600182019150602081019050610e28565b838801955050505b50505092915050565b6000610e648284610dd5565b915081905092915050565b7f4e6f7420617574686f72697a6564206e6f746172697a65720000000000000000600082015250565b6000610ea5601883610a84565b9150610eb082610e6f565b602082019050919050565b60006020820190508181036000830152610ed481610e98565b9050919050565b6000610ee682610a79565b610ef08185610d77565b9350610f00818560208601610a95565b80840191505092915050565b6000610f188284610edb565b915081905092915050565b7f50726f6f6620616c726561647920657869737473210000000000000000000000600082015250565b6000610f59601583610a84565b9150610f6482610f23565b602082019050919050565b60006020820190508181036000830152610f8881610f4c565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610fdc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f9f565b610fe68683610f9f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061102361101e61101984610a60565b610ffe565b610a60565b9050919050565b6000819050919050565b61103d83611008565b6110516110498261102a565b848454610fac565b825550505050565b600090565b611066611059565b611071818484611034565b505050565b5b818110156110955761108a60008261105e565b600181019050611077565b5050565b601f8211156110da576110ab81610dc0565b6110b484610f8f565b810160208510156110c3578190505b6110d76110cf85610f8f565b830182611076565b50505b505050565b600082821c905092915050565b60006110fd600019846008026110df565b1980831691505092915050565b600061111683836110ec565b9150826002028217905092915050565b61112f82610a79565b67ffffffffffffffff811115611148576111476108ec565b5b6111528254610cda565b61115d828285611099565b600060209050601f831160018114611190576000841561117e578287015190505b611188858261110a565b8655506111f0565b601f19841661119e86610dc0565b60005b828110156111c6578489015182556001820191506020850194506020810190506111a1565b868310156111e357848901516111df601f8916826110ec565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526112128185610abf565b90506112216020830184610a6a565b939250505056fea2646970667358221220569493f08daa775b3d39d48dd28a48d293f7fd235f27d704327c148ac9f4ffe264736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/Notary.sol:Notary",
        "label": "notarizers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 17,
        "contract": "contracts/Notary.sol:Notary",
        "label": "proofs",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Proof)6_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Proof)6_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Notary.Proof)",
        "numberOfBytes": "32",
        "value": "t_struct(Proof)6_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proof)6_storage": {
        "encoding": "inplace",
        "label": "struct Notary.Proof",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Notary.sol:Notary",
            "label": "timestamp",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5,
            "contract": "contracts/Notary.sol:Notary",
            "label": "hash",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}